
# Borrowing Strength with Linear Mixed Models: R-based lme4 in Julia

## Setup

We produce the subject facets for the `sleepstudy` data including

+ observations
+ conditional means
+ within-subject slopes
+ estimate for pooled data

### Julia

```{julia;term=true}
using DrWatson
@quickactivate "SMLP2020"

using MixedModels                                    
using DataFrames, DataFramesMeta
using RCall        
```

### R 

##  Load packages

We use Julia's `RCall()` for this. 

```{julia;term=true}
R"""
library(lme4)
library(tidyverse)

# reorder levels of Subject by mean of Reaction
sleepstudy <- mutate(sleepstudy, Subject = fct_reorder(Subject, Reaction, mean))
""";
```

## Basics

### Fit the model

```{julia;term=true}
R"""
fm <- lmer(Reaction ~ 1 + Days + (Days | Subject), sleepstudy, REML=FALSE,
           control=lmerControl(calc.derivs=FALSE))
print(summary(fm))
ranef(fm)
""";
```

### Extract conditional means

```{julia;term=true}
R"""
cms <- coef(fm)[["Subject"]] %>% 
  tibble::rownames_to_column("Subject") %>% 
  rename(Day_0 = `(Intercept)`) %>% 
  tibble::add_column(Estimate = "Conditional mean")
cms
"""
```

### Facet plot

```{julia;term=true}
R"""
plot1 <- 
  sleepstudy %>%
  mutate(Subject = forcats::fct_reorder(Subject, Reaction, mean)) %>%
  ggplot(aes(x = Days, y = Reaction)) + 
  geom_point() +
  geom_abline(data=cms, aes(intercept = Day_0, slope = Days)) +
  scale_x_continuous("Day", breaks=seq(0,9)) +
  scale_y_continuous("Reaction time [ms]", limits=c(100,500)) +
  facet_wrap(~ fct_rev(fct_rev(Subject))) + 
  theme_bw()
plot1
"""
```

## Demonstration of borrowing strength

### Estimates of within-subject slopes


```{julia;term=true}
R"""
wss <- lmList(Reaction ~ 1 + Days | Subject, sleepstudy) %>% 
  coef() %>% 
  tibble::rownames_to_column("Subject") %>% 
  rename(Day_0 = `(Intercept)`) %>% 
  tibble::add_column(Estimate = "Within-subject")
"""
```

### Estimates for pooled data

```{julia;term=true}
R"""
pld <- tibble(
  Subject = factor(levels(sleepstudy$Subject)),
  Day_0 = coef(lm(Reaction ~ 1 + Days, sleepstudy))[1],
  Days = coef(lm(Reaction ~ 1 + Days, sleepstudy))[2],
  Estimate = "Pooled"
)
"""
```

### Combine the estimates

```{julia;term=true}
R"""
cms_wss_pld <- bind_rows(cms, wss, pld) 
cms_wss_pld$Estimate <- factor(cms_wss_pld$Estimate, levels=c("Conditional mean", "Within-subject", "Pooled"))
cms_wss_pld
"""
```

### Combined facet plot

```{julia;term=true}
R"""
plot2 <- 
  sleepstudy %>%
  ggplot(aes(x = Days, y = Reaction)) + 
  geom_point() +
  geom_abline(data=cms_wss_pld, aes(intercept = Day_0, slope = Days, color = Estimate)) +
  facet_wrap(~ fct_rev(fct_rev(Subject))) +
  scale_x_continuous("Day", breaks=seq(0,9)) +
  scale_y_continuous("Reaction time [ms]", limits=c(100,500)) +
  theme_bw() +
  theme(legend.position = c(.9, .1))

# show the plot
plot2
"""
```

### Shrinkage plot

```{julia;term=true}

R"""
bind_rows(wss, cms) %>% 
  ggplot(aes(x = Day_0, y = Days, color = Estimate)) + 
  geom_point() + 
  geom_point(data = pld) + 
  geom_path(aes(group = Subject), 
            arrow = arrow(length = unit(.02, "npc"),end="last")) + 
  scale_x_continuous("Reaction time @ day 0 [ms]", limits=c(200,300)) +
  scale_y_continuous("Change per day [ms]", limits=c(-5,25)) +
  theme_bw() + theme(legend.position = "top") +
  ggtitle("'Borrowing Strength' (Shrinkage)")
"""

```
## Appendix

### Output options 

This script can be used to generate alternative source or output files.

```
julia> using Weave, IJulia
julia> # input for Jupyter notebook
julia> convert_doc("notebooks/sleepstudy_borrowingstrength_lme4.jmd", "notebooks/sleepstudy_borrowingstrength_lme4.ipynb")
julia> # Julia script w/o markdown
julia> convert_doc("notebooks/sleepstudy_borrowingstrength_lme4.jmd", "notebooks/sleepstudy_borrowingstrength_lme4.jl")   
julia> IJulia.notebook(dir="notebooks")
```

The last command opens a Jupyter Notebook window. There you can refine the script and generate an HTML from `Files > Download as > HTML`.  For a PDF of this notebook, open the HTML in your browser and use normal export as PDF from there.

### Session information

```{julia;term=true}
using InteractiveUtils
versioninfo()
```